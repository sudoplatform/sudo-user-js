// Sourcecode generated by graphql-codegen. DO NOT EDIT!
/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
export type Maybe<T> = T | undefined
export type InputMaybe<T> = T | undefined
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K]
}
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>
}
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>
}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
  AWSDate: any
  AWSDateTime: any
  AWSEmail: any
  AWSIPAddress: any
  AWSJSON: unknown
  AWSPhone: any
  AWSTime: any
  AWSTimestamp: any
  AWSURL: any
}

export type Deregister = {
  __typename?: 'Deregister'
  success: Scalars['Boolean']
}

export type FederatedId = {
  __typename?: 'FederatedId'
  identityId: Scalars['String']
}

export type GlobalSignOut = {
  __typename?: 'GlobalSignOut'
  success: Scalars['Boolean']
}

export type Mutation = {
  __typename?: 'Mutation'
  deregister?: Maybe<Deregister>
  globalSignOut?: Maybe<GlobalSignOut>
  registerFederatedId?: Maybe<FederatedId>
}

export type MutationRegisterFederatedIdArgs = {
  input?: InputMaybe<RegisterFederatedIdInput>
}

export type Query = {
  __typename?: 'Query'
  notImplemented?: Maybe<Scalars['Boolean']>
}

export type QueryNotImplementedArgs = {
  dummy: Scalars['String']
}

export type RegisterFederatedIdInput = {
  idToken: Scalars['String']
}

export type DeregisterMutationVariables = Exact<{ [key: string]: never }>

export type DeregisterMutation = {
  __typename?: 'Mutation'
  deregister?: { __typename?: 'Deregister'; success: boolean } | undefined
}

export type GlobalSignOutMutationVariables = Exact<{ [key: string]: never }>

export type GlobalSignOutMutation = {
  __typename?: 'Mutation'
  globalSignOut?: { __typename?: 'GlobalSignOut'; success: boolean } | undefined
}

export type RegisterFederatedIdMutationVariables = Exact<{
  input: RegisterFederatedIdInput
}>

export type RegisterFederatedIdMutation = {
  __typename?: 'Mutation'
  registerFederatedId?:
    | { __typename?: 'FederatedId'; identityId: string }
    | undefined
}

export const DeregisterDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'deregister' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'deregister' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'success' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DeregisterMutation, DeregisterMutationVariables>
export const GlobalSignOutDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'GlobalSignOut' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'globalSignOut' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'success' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GlobalSignOutMutation,
  GlobalSignOutMutationVariables
>
export const RegisterFederatedIdDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'registerFederatedId' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'input' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'RegisterFederatedIdInput' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'registerFederatedId' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'input' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'input' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'identityId' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  RegisterFederatedIdMutation,
  RegisterFederatedIdMutationVariables
>
